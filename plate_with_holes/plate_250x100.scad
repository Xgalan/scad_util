// Generated by SolidPython 1.0.5 on 2021-02-06 13:52:40
$fn = 150;


difference() {
	union() {
		cube(size = [120, 250, 15]);
		translate(v = [110, 10, 15]) {
			cylinder(d1 = 15, d2 = 15, h = 5);
		}
		translate(v = [110, 240, 15]) {
			cylinder(d1 = 15, d2 = 10, h = 5);
		}
	}
	translate(v = [10, 10, 0]) {
		cylinder(d = 5.5000000000, h = 15);
	}
	translate(v = [10, 10, 9.5000000000]) {
		cylinder(d = 10, h = 5.5000000000);
	}
	translate(v = [110, 10, 0]) {
		cylinder(d = 5.5000000000, h = 15);
	}
	translate(v = [110, 10, 9.5000000000]) {
		cylinder(d = 10, h = 15);
	}
	translate(v = [10, 240, 0]) {
		cylinder(d = 5.5000000000, h = 15);
	}
	translate(v = [10, 240, 9.5000000000]) {
		cylinder(d = 10, h = 5.5000000000);
	}
	translate(v = [110, 240, 0]) {
		cylinder(d = 6.0500000000, h = 15);
	}
	translate(v = [110, 240, 9.5000000000]) {
		cylinder(d = 6.0500000000, h = 15.5000000000);
	}
	translate(v = [30, 30, 0]) {
		cylinder(d = 2.5000000000, h = 15);
	}
	translate(v = [25.5000000000, 0, 14]) {
		cube(size = [9, 250, 1]);
	}
	translate(v = [75.5000000000, 0, 14]) {
		cube(size = [9, 250, 1]);
	}
}
/***********************************************
*********      SolidPython code:      **********
************************************************
 
import json
from pathlib import Path

from solid import scad_render_to_file
import click
import model as Model


SEGMENTS = 150



@click.command()
@click.argument('filename', required=True, type=click.STRING)
def cli(filename):
    """
    Generate a scad file of a plate with optional holes in it.
    First define the overall geometry: "circle" or "square", then declare the holes.

    The json file must have a certain structure, i.e.:

    {
        "width": 400,
        "height": 300,
        "thickness": 15,
        "holes": [
            {
                "diameter": 5.5,
                "x_pos": 20,
                "y_pos": 20,
                "z_pos": 0,
                "depth": 15
            },
            ...
        ]
    }
    """
    p = Path(filename)
    click.echo(f'Generating {p.stem}.scad')
    with open(filename) as f:
        data = json.load(f)
        if "holes" in data:
            if "thickness" in data:
                scad_render_to_file(
                    Model.plate_with_holes(
                        data["form"] if "form" in data else "square",
                        {
                        "width": data["width"] if "width" in data else 0,
                        "height": data["height"] if "height" in data else 0,
                        "diameter": data["diameter"] if "diameter" in data else 0,
                        "thickness": data["thickness"],
                        "fillet": data["fillet"] if "fillet" in data else 0
                        },
                        data["holes"],
                        data["bosses"] if "bosses" in data else None
                    ),
                    file_header=f'$fn = {SEGMENTS};',
                    filepath=f'{p.stem}.scad'
                )
                click.echo('Processing complete.')
            else:
                click.echo('Declare the thickness of your plate.')
                click.echo('Process aborted.')
        else:
            click.echo('You must include some holes in your plate!')
            click.echo('Process aborted.')
    


if __name__ == '__main__':
    cli()
 
 
************************************************/
